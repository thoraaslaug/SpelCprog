-----SPELMOTORN-----

För Basnivå (obligatoriskt) gäller följande krav:

programmet ska kodas i C++ och använda grafikbiblioteket SDL2
objektorienterad programmering ska användas: programmet ska vara uppdelat i klasser med användning av oo-tekniker som inkapsling, arv och polymorfism
tillämpningsprogrammeraren ska skyddas mot att göra svårupptäckta fel som att använda värdesemantik för objekt av polymorfa klasser
det ska finnas en gemensam basklass (säg Sprite) för alla figurer, denna basklass ska vara förberedd för att vara en rotklass i en klasshierarki (om tillämpningsprogrammet önskar göra subklasser till den)
inkapsling: datamedlemmar ska vara privata om inte väldigt speciella skäl föreligger
det ska inte finnas något minnesläckage, du ska se till att dynamiskt allokerat minne städas bort
spelmotorn ska kunna ta emot input (tangentbordshändelser, mushändelser) och reagera på dem enligt tillämpningsprogrammets önskemål, eller vidarebefordra dem till tillämpningens objekt
enkel kollisionsdetektering: man ska kunna kolla om den omgivande rektangeln för en Sprite har kolliderat med den omgivande rektangeln för en annan Sprite
programmet ska gå att kompilera och vara körbart på en dator under både Linux och MS Windows (alltså inga plattformspecifika konstruktioner) med SDL2 och SDL2_ttf, SDL2_image och SDL2_mixer (Om man vill programmera med andra bibliotek kan man få dispens från detta krav men det kräver en överenskommelse med kursansvarige)
För Tilläggsnivå D (valfritt tillägg) tillkommer följande krav:

man ska kunna ange en högsta "frame rate" (antalet frames per sekund)
det ska finnas olika typer av Sprites i en klasshierarki i den generella delen, det kan t.ex. vara rörliga Sprites (för figurer som flyttar sig själva och där man kan ange hur mycket de ska flytta sig i x- resp. y-led per tick) och orörliga Sprites. Objekt av dessa klasser ska endast kunna skapas dynamiskt och värdesemantik ska vara förbjuden för dem
För Tilläggsnivå C (valfritt tillägg) gäller samma krav som för D och även följande krav:

en av subklasser till Sprite ska kunna vara en animerad figur, representerad internt antingen med flera bilder som växlar efter ett angivet antal tick eller med en sprite sheet
spelmotorn ska vara förberedd för att tillämpningen vill installera kortkommandon (enkla tangenttryckningar). Tillämpningen ska kunna ange en tangent och en call back-funktion som ska anropas då denna tangent har tryckts ner
För Tilläggsnivå B (valfritt tillägg) gäller samma krav som för C och även följande:

spelmotorn ska vara förberedd för hantering av spelnivåer (levels). Tillämpningar ska kunna skapa flera olika "scener" bestående av olika Sprite-objekt och bakgrundsbilder och lätt växla mellan dem
kortkommandon (tangenttryckningar) ska kunna knytas även till medlemsfunktioner i angivna objekt (förutom till fria funktioner). Det ska vara lätt för tillämpningen att ange antingen en funktionspekare till en fri funktion eller kombinationen av en objektpekare och en funktionsmedlemspekare tillsammans med tangenten
det ska finnas en grafisk komponent (Sprite-subklass?) som ska kunna användas som ett inmatningsfält för text, som tillämpningen kan använda för textinmatning (t.ex. namn på spelaren för en highscore-lista). Det behöver inte (men får gärna) finnas editeringsmöjligheter för inmatningsfältet.
För Tilläggsnivå A (valfritt tillägg) gäller samma krav som för B och dessutom:

kollisionsdetektering ska göras på pixelnivå, med hänsyn tagen till genomskinliga pixlar
spelmotorn ska implementera viss funktionalitet hos en fysikmotor, nämligen att rörliga Sprites kan påverkas av en gravitation samt ska kunna studsa mot varandra vid kollision osv. Sprites ska ha en viss elasticitet som påverkar deras studsbeteende.

-----SPELET-----

Du ska själv välja vilket spel du vill skapa i din spelmotor. Det ska dock vara av typen arkadspel d.v.s. ett tvådimensionellt spel med rörliga figurer (sprites) av vilka en styrs av användaren. Klassiska spel som SpaceInvaders och PacMan, eller plattformspel som Mario och Sonic är exempel på sådana spel. Här är några länkar som kan ge inspiration:

http://en.wikipedia.org/wiki/Space_Invaders 
http://en.wikipedia.org/wiki/Breakout_(arcade_game)
http://en.wikipedia.org/wiki/Arkanoid
http://en.wikipedia.org/wiki/Pac_man 
http://www.2dplay.com/
Spelet skall ha följande egenskaper(krav):

Spelet ska simulera en värld som innehåller olika typer av objekt. Objekten ska ha olika beteenden och röra sig i världen och agera på olika sätt när de möter andra objekt.
Det måste finnas minst två olika typer av objekt och det ska finnas flera instanser av minst en av dessa. T.ex ett spelarobjekt och många instanser av fiendeobjekt.
Ett beteende som måste finnas med är att figurerna ska röra sig över skärmen. Rörelsen kan följa ett mönster och/eller vara slumpmässig.
Det räcker att grafiken är tvådimensionell (för enkelhetens skull).
Världen (spelplanen) kan antas vara lika stor som fönstret (du kan göra en större spelplan med panorering, men det blir lite krångligare).
En figur ska styras av spelaren, med tangentbordet eller med musen. Du kan även göra ett spel där man spelar två stycken genom att dela på tangentbordet (varje spelare använder olika tangenter). Då styr man var sin figur.
Det ska hända olika saker när objekten möter varandra, de ska påverka varandra på något sätt. T.ex kan ett av objekten tas bort, eller så kan objekten förvandlas på något sätt, eller så kan ett nytt objekt skapas. (Ett exempel på att skapa/ta bort objekt är när man i Space Invaders trycker på skjuta- knappen, t.ex en musknapp, då avfyras ett laserskott och skottet blir då en ny figur som skapas och placeras i världen, på en position vid laserkanonens mynning. Skottet rör sig framåt (uppåt) och om det träffar ett fiendeskepp tas både skottet och skeppet bort, om skottet kommer utanför spelplanen, dvs det missar, tas endast skottet bort.